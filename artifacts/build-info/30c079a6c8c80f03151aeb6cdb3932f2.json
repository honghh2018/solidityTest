{
	"id": "30c079a6c8c80f03151aeb6cdb3932f2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"第二周/functionOutput.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\n\r\n\r\ncontract functionOutput{\r\n    function returnMany() public pure  returns(uint,bool){\r\n        return (1,true);\r\n    }\r\n\r\n    //返回命名\r\n    function returnMany1() public pure  returns(uint x,bool b){\r\n\r\n        return (1,true);\r\n    }\r\n\r\n     //返回命名\r\n    function returnMany2() public pure  returns(uint x,bool b){\r\n        //不需要return\r\n        x=1;\r\n        b=true;\r\n    }\r\n\r\n    //获取多个输出\r\n\r\n    function destructAssign() public pure {\r\n        // (uint x,bool b)=returnMany();\r\n        //只要第二个不要第一个\r\n        (,bool b)=returnMany();\r\n\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"第二周/functionOutput.sol": {
				"functionOutput": {
					"abi": [
						{
							"inputs": [],
							"name": "destructAssign",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "returnMany",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "returnMany1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "b",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "returnMany2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "b",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":65:663  contract functionOutput{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":65:663  contract functionOutput{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0bbf1f04\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x65fd8204\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7f980a07\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x86887544\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":210:304  function returnMany1() public pure  returns(uint x,bool b){... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":333:457  function returnMany2() public pure  returns(uint x,bool b){... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":493:658  function destructAssign() public pure {... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":95:182  function returnMany() public pure  returns(uint,bool){... */\n    tag_6:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":210:304  function returnMany1() public pure  returns(uint x,bool b){... */\n    tag_8:\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":254:260  uint x */\n      0x00\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":261:267  bool b */\n      0x00\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":289:290  1 */\n      0x01\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":291:295  true */\n      dup1\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":281:296  return (1,true) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":210:304  function returnMany1() public pure  returns(uint x,bool b){... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":333:457  function returnMany2() public pure  returns(uint x,bool b){... */\n    tag_12:\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":377:383  uint x */\n      0x00\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":384:390  bool b */\n      0x00\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":431:432  1 */\n      0x01\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":429:432  x=1 */\n      swap2\n      pop\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":445:449  true */\n      0x01\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":443:449  b=true */\n      swap1\n      pop\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":333:457  function returnMany2() public pure  returns(uint x,bool b){... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":493:658  function destructAssign() public pure {... */\n    tag_15:\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":628:634  bool b */\n      0x00\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":636:648  returnMany() */\n      tag_22\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":636:646  returnMany */\n      tag_17\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":636:648  returnMany() */\n      jump\t// in\n    tag_22:\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":626:648  (,bool b)=returnMany() */\n      swap2\n      pop\n      pop\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":531:658  {... */\n      pop\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":493:658  function destructAssign() public pure {... */\n      jump\t// out\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":95:182  function returnMany() public pure  returns(uint,bool){... */\n    tag_17:\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":138:142  uint */\n      0x00\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":143:147  bool */\n      0x00\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":167:168  1 */\n      0x01\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":169:173  true */\n      dup1\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":159:174  return (1,true) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe5\\x91\\xa8/functionOutput.sol\":95:182  function returnMany() public pure  returns(uint,bool){... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_24:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_25:\n        /* \"#utility.yul\":177:201   */\n      tag_31\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_24\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:304   */\n    tag_26:\n        /* \"#utility.yul\":248:255   */\n      0x00\n        /* \"#utility.yul\":291:296   */\n      dup2\n        /* \"#utility.yul\":284:297   */\n      iszero\n        /* \"#utility.yul\":277:298   */\n      iszero\n        /* \"#utility.yul\":266:298   */\n      swap1\n      pop\n        /* \"#utility.yul\":214:304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":310:419   */\n    tag_27:\n        /* \"#utility.yul\":391:412   */\n      tag_34\n        /* \"#utility.yul\":406:411   */\n      dup2\n        /* \"#utility.yul\":391:412   */\n      tag_26\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":386:389   */\n      dup3\n        /* \"#utility.yul\":379:413   */\n      mstore\n        /* \"#utility.yul\":310:419   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":425:745   */\n    tag_10:\n        /* \"#utility.yul\":540:544   */\n      0x00\n        /* \"#utility.yul\":578:580   */\n      0x40\n        /* \"#utility.yul\":567:576   */\n      dup3\n        /* \"#utility.yul\":563:581   */\n      add\n        /* \"#utility.yul\":555:581   */\n      swap1\n      pop\n        /* \"#utility.yul\":591:662   */\n      tag_36\n        /* \"#utility.yul\":659:660   */\n      0x00\n        /* \"#utility.yul\":648:657   */\n      dup4\n        /* \"#utility.yul\":644:661   */\n      add\n        /* \"#utility.yul\":635:641   */\n      dup6\n        /* \"#utility.yul\":591:662   */\n      tag_25\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":672:738   */\n      tag_37\n        /* \"#utility.yul\":734:736   */\n      0x20\n        /* \"#utility.yul\":723:732   */\n      dup4\n        /* \"#utility.yul\":719:737   */\n      add\n        /* \"#utility.yul\":710:716   */\n      dup5\n        /* \"#utility.yul\":672:738   */\n      tag_27\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":425:745   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220618ff275a4fd3b52247a7b62d668458dec4dd30e36e32572f1f619fe2b603b0064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5061017b8061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80630bbf1f041461004e57806365fd82041461006d5780637f980a071461008c5780638688754414610096575b5f5ffd5b6100566100b5565b60405161006492919061011e565b60405180910390f35b6100756100c2565b60405161008392919061011e565b60405180910390f35b6100946100d0565b005b61009e6100df565b6040516100ac92919061011e565b60405180910390f35b5f5f600180915091509091565b5f5f60019150600190509091565b5f6100d96100df565b91505050565b5f5f600180915091509091565b5f819050919050565b6100fe816100ec565b82525050565b5f8115159050919050565b61011881610104565b82525050565b5f6040820190506101315f8301856100f5565b61013e602083018461010f565b939250505056fea2646970667358221220618ff275a4fd3b52247a7b62d668458dec4dd30e36e32572f1f619fe2b603b0064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17B DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBBF1F04 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x65FD8204 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x7F980A07 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x86887544 EQ PUSH2 0x96 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64 SWAP3 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP3 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0xD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP3 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP2 POP PUSH1 0x1 SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0xD9 PUSH2 0xDF JUMP JUMPDEST SWAP2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE DUP2 PUSH2 0xEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x118 DUP2 PUSH2 0x104 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x131 PUSH0 DUP4 ADD DUP6 PUSH2 0xF5 JUMP JUMPDEST PUSH2 0x13E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x8FF2 PUSH22 0xA4FD3B52247A7B62D668458DEC4DD30E36E32572F1F6 NOT INVALID 0x2B PUSH1 0x3B STOP PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "65:598:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@destructAssign_50": {
									"entryPoint": 208,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@returnMany1_25": {
									"entryPoint": 181,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@returnMany2_41": {
									"entryPoint": 194,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@returnMany_13": {
									"entryPoint": 223,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:748:1",
										"nodeType": "YulBlock",
										"src": "0:748:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "256:48:1",
													"nodeType": "YulBlock",
													"src": "256:48:1",
													"statements": [
														{
															"nativeSrc": "266:32:1",
															"nodeType": "YulAssignment",
															"src": "266:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "291:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "291:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "284:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "284:6:1"
																		},
																		"nativeSrc": "284:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "284:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "277:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "277:6:1"
																},
																"nativeSrc": "277:21:1",
																"nodeType": "YulFunctionCall",
																"src": "277:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "266:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "266:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "214:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "238:5:1",
														"nodeType": "YulTypedName",
														"src": "238:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "248:7:1",
														"nodeType": "YulTypedName",
														"src": "248:7:1",
														"type": ""
													}
												],
												"src": "214:90:1"
											},
											{
												"body": {
													"nativeSrc": "369:50:1",
													"nodeType": "YulBlock",
													"src": "369:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "386:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "386:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "406:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "406:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "391:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "391:14:1"
																		},
																		"nativeSrc": "391:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "391:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "379:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "379:6:1"
																},
																"nativeSrc": "379:34:1",
																"nodeType": "YulFunctionCall",
																"src": "379:34:1"
															},
															"nativeSrc": "379:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "379:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "310:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "357:5:1",
														"nodeType": "YulTypedName",
														"src": "357:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "364:3:1",
														"nodeType": "YulTypedName",
														"src": "364:3:1",
														"type": ""
													}
												],
												"src": "310:109:1"
											},
											{
												"body": {
													"nativeSrc": "545:200:1",
													"nodeType": "YulBlock",
													"src": "545:200:1",
													"statements": [
														{
															"nativeSrc": "555:26:1",
															"nodeType": "YulAssignment",
															"src": "555:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "567:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "567:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "578:2:1",
																		"nodeType": "YulLiteral",
																		"src": "578:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "563:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:1"
																},
																"nativeSrc": "563:18:1",
																"nodeType": "YulFunctionCall",
																"src": "563:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "555:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "555:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "635:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "635:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "648:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "648:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "659:1:1",
																				"nodeType": "YulLiteral",
																				"src": "659:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "644:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "644:3:1"
																		},
																		"nativeSrc": "644:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "644:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "591:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "591:43:1"
																},
																"nativeSrc": "591:71:1",
																"nodeType": "YulFunctionCall",
																"src": "591:71:1"
															},
															"nativeSrc": "591:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "591:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "710:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "710:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "723:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "723:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "734:2:1",
																				"nodeType": "YulLiteral",
																				"src": "734:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:1"
																		},
																		"nativeSrc": "719:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "719:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "672:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "672:37:1"
																},
																"nativeSrc": "672:66:1",
																"nodeType": "YulFunctionCall",
																"src": "672:66:1"
															},
															"nativeSrc": "672:66:1",
															"nodeType": "YulExpressionStatement",
															"src": "672:66:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "425:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "509:9:1",
														"nodeType": "YulTypedName",
														"src": "509:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "521:6:1",
														"nodeType": "YulTypedName",
														"src": "521:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "529:6:1",
														"nodeType": "YulTypedName",
														"src": "529:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "540:4:1",
														"nodeType": "YulTypedName",
														"src": "540:4:1",
														"type": ""
													}
												],
												"src": "425:320:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80630bbf1f041461004e57806365fd82041461006d5780637f980a071461008c5780638688754414610096575b5f5ffd5b6100566100b5565b60405161006492919061011e565b60405180910390f35b6100756100c2565b60405161008392919061011e565b60405180910390f35b6100946100d0565b005b61009e6100df565b6040516100ac92919061011e565b60405180910390f35b5f5f600180915091509091565b5f5f60019150600190509091565b5f6100d96100df565b91505050565b5f5f600180915091509091565b5f819050919050565b6100fe816100ec565b82525050565b5f8115159050919050565b61011881610104565b82525050565b5f6040820190506101315f8301856100f5565b61013e602083018461010f565b939250505056fea2646970667358221220618ff275a4fd3b52247a7b62d668458dec4dd30e36e32572f1f619fe2b603b0064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBBF1F04 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x65FD8204 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x7F980A07 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x86887544 EQ PUSH2 0x96 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x56 PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64 SWAP3 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP3 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0xD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP3 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP2 POP PUSH1 0x1 SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0xD9 PUSH2 0xDF JUMP JUMPDEST SWAP2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE DUP2 PUSH2 0xEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x118 DUP2 PUSH2 0x104 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x131 PUSH0 DUP4 ADD DUP6 PUSH2 0xF5 JUMP JUMPDEST PUSH2 0x13E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x8FF2 PUSH22 0xA4FD3B52247A7B62D668458DEC4DD30E36E32572F1F6 NOT INVALID 0x2B PUSH1 0x3B STOP PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "65:598:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;210:94;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;333:124;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;493:165;;;:::i;:::-;;95:87;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;210:94;254:6;261;289:1;291:4;281:15;;;;210:94;;:::o;333:124::-;377:6;384;431:1;429:3;;445:4;443:6;;333:124;;:::o;493:165::-;628:6;636:12;:10;:12::i;:::-;626:22;;;531:127;493:165::o;95:87::-;138:4;143;167:1;169:4;159:15;;;;95:87;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:90::-;248:7;291:5;284:13;277:21;266:32;;214:90;;;:::o;310:109::-;391:21;406:5;391:21;:::i;:::-;386:3;379:34;310:109;;:::o;425:320::-;540:4;578:2;567:9;563:18;555:26;;591:71;659:1;648:9;644:17;635:6;591:71;:::i;:::-;672:66;734:2;723:9;719:18;710:6;672:66;:::i;:::-;425:320;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "75800",
								"executionCost": "121",
								"totalCost": "75921"
							},
							"external": {
								"destructAssign()": "226",
								"returnMany()": "494",
								"returnMany1()": "428",
								"returnMany2()": "450"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 663,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 663,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 65,
									"end": 663,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 65,
									"end": 663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 663,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 65,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 663,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 65,
									"end": 663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 663,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 65,
									"end": 663,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65,
									"end": 663,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 663,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 663,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 663,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 663,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65,
									"end": 663,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 663,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220618ff275a4fd3b52247a7b62d668458dec4dd30e36e32572f1f619fe2b603b0064736f6c634300081e0033",
									".code": [
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "BBF1F04"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "65FD8204"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "7F980A07"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "86887544"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 210,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 210,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 210,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 210,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 210,
											"end": 304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 210,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 210,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 333,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 333,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 333,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 333,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 333,
											"end": 457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 333,
											"end": 457,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 333,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 333,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 333,
											"end": 457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 493,
											"end": 658,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 493,
											"end": 658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 493,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 493,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 493,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 493,
											"end": 658,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 493,
											"end": 658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 493,
											"end": 658,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 95,
											"end": 182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 95,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 95,
											"end": 182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 95,
											"end": 182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 95,
											"end": 182,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 95,
											"end": 182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 95,
											"end": 182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 210,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 281,
											"end": 296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 281,
											"end": 296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 281,
											"end": 296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 210,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 333,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 377,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 429,
											"end": 432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 429,
											"end": 432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 443,
											"end": 449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 333,
											"end": 457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 493,
											"end": 658,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 493,
											"end": 658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 636,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 636,
											"end": 648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 648,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 636,
											"end": 648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 531,
											"end": 658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 493,
											"end": 658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 95,
											"end": 182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 138,
											"end": 142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 304,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 214,
											"end": 304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 248,
											"end": 255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 284,
											"end": 297,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 277,
											"end": 298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 266,
											"end": 298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 214,
											"end": 304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 310,
											"end": 419,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 310,
											"end": 419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 406,
											"end": 411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 391,
											"end": 412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 412,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 391,
											"end": 412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 379,
											"end": 413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 310,
											"end": 419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 310,
											"end": 419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 310,
											"end": 419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 425,
											"end": 745,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 425,
											"end": 745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 540,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 580,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 563,
											"end": 581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 555,
											"end": 581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 591,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 659,
											"end": 660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 644,
											"end": 661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 635,
											"end": 641,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 591,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 591,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 591,
											"end": 662,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 591,
											"end": 662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 672,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 732,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 719,
											"end": 737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 672,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 672,
											"end": 738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 672,
											"end": 738,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 672,
											"end": 738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 425,
											"end": 745,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 425,
											"end": 745,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 425,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 425,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 425,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 425,
											"end": 745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"第二周/functionOutput.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"destructAssign()": "7f980a07",
							"returnMany()": "86887544",
							"returnMany1()": "0bbf1f04",
							"returnMany2()": "65fd8204"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"destructAssign\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnMany\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnMany1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnMany2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u7b2c\\u4e8c\\u5468/functionOutput.sol\":\"functionOutput\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u7b2c\\u4e8c\\u5468/functionOutput.sol\":{\"keccak256\":\"0x19897a5d4f8ac6597c1df9f7d57208cc4ac598a96e3ae5c95d2521ed034e1ac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c142fc267b76af72b322537cead29940b5486e51ea49d67c4414e0de67b27257\",\"dweb:/ipfs/QmcpRZU6DUz5GWDgxDWEs2xs5aqBM4jC3sjSkahxUVEsqL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> 第二周/functionOutput.sol:30:11:\n   |\n30 |         (,bool b)=returnMany();\n   |           ^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 634,
					"file": "第二周/functionOutput.sol",
					"start": 628
				},
				"type": "Warning"
			}
		],
		"sources": {
			"第二周/functionOutput.sol": {
				"ast": {
					"absolutePath": "第二周/functionOutput.sol",
					"exportedSymbols": {
						"functionOutput": [
							51
						]
					},
					"id": 52,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "functionOutput",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 51,
							"linearizedBaseContracts": [
								51
							],
							"name": "functionOutput",
							"nameLocation": "74:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "148:34:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "31",
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "167:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "74727565",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "169:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"id": 10,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "166:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_bool_$",
														"typeString": "tuple(int_const 1,bool)"
													}
												},
												"functionReturnParameters": 7,
												"id": 11,
												"nodeType": "Return",
												"src": "159:15:0"
											}
										]
									},
									"functionSelector": "86887544",
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "returnMany",
									"nameLocation": "104:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "143:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "143:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:11:0"
									},
									"scope": 51,
									"src": "95:87:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "268:36:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "31",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "289:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "74727565",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "291:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"id": 22,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "288:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_bool_$",
														"typeString": "tuple(int_const 1,bool)"
													}
												},
												"functionReturnParameters": 19,
												"id": 23,
												"nodeType": "Return",
												"src": "281:15:0"
											}
										]
									},
									"functionSelector": "0bbf1f04",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "returnMany1",
									"nameLocation": "219:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "259:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "254:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "254:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "266:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "261:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:15:0"
									},
									"scope": 51,
									"src": "210:94:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "391:66:0",
										"statements": [
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "429:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "429:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "429:3:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "443:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "445:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "443:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "443:6:0"
											}
										]
									},
									"functionSelector": "65fd8204",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "returnMany2",
									"nameLocation": "342:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "353:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "382:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "377:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "389:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "384:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "384:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:15:0"
									},
									"scope": 51,
									"src": "333:124:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "531:127:0",
										"statements": [
											{
												"assignments": [
													null,
													45
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "633:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "628:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "628:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 46,
														"name": "returnMany",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "636:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$_t_bool_$",
															"typeString": "function () pure returns (uint256,bool)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "636:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "626:22:0"
											}
										]
									},
									"functionSelector": "7f980a07",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destructAssign",
									"nameLocation": "502:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "516:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "531:0:0"
									},
									"scope": 51,
									"src": "493:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 52,
							"src": "65:598:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "34:629:0"
				},
				"id": 0
			}
		}
	}
}